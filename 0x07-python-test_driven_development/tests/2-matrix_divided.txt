Using ``add_integer``
-----------------------

Variable "b" is defaulted to int "98"
Ensure Variable type is int
Returns the sum of the Variable

First import ``add_integer``

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:


    Adds 2 integers.

    Args:
        a (int or float): The first number to be added.
        b (int or float): The second number to be added. Defaults to 98.

    Returns:
        int: The sum of a and b, cast to an integer.

    Raises:
        TypeError: If a or b are not integers or floats.

    Examples:
        >>> add_integer(1, 2)
        3
        >>> add_integer(100, -2)
        98
        >>> add_integer(2)
        100
        >>> add_integer(100.3, -2)
        98
        >>> add_integer(1500.5)
        1598
        >>> add_integer(float('NaN'))
        Traceback (most recent call last):
            ...
        ValueError: cannot convert float NaN to integer
        >>> add_integer(4, "School")
        Traceback (most recent call last):
            ...
        TypeError: b must be an integer
        >>> add_integer(None)
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer
        >>> add_integer(-100.5, -10.8)
        -110
